  - platform: template
    sensors: 
      power_heating:
        friendly_name: "Forbruk Oppvarming"
        value_template: >
          {{
          ((states.sensor.bathroom_heating_power.state | int) +
          (states.sensor.bedroom_heating_power.state | int) +
          (states.sensor.entrance_heating_power.state | int) +
          (states.sensor.guestbathroom_heating_power.state | int) +
          (states.sensor.guestbedroom_heating_power.state | int) +
          (states.sensor.kitchen_heating_power.state | int) +
          (states.sensor.laundry_heating_power.state | int) +
          (states.sensor.livingroom_heating_power.state | int) +
          (states.sensor.playroom_heating_power.state | int) +
          (states.sensor.bedroomolav_heating_power_01.state | int) +
          (states.sensor.bedroomolav_heating_power_02.state | int) +
          (states.sensor.workshop_heating_power.state | int))
          }}
        unit_of_measurement: 'W'
      bedroom_window_left:
        friendly_name: 'Venstre vindu'
        value_template: >
          {% if is_state("binary_sensor.bedroom_window_left", "on") %}
          Åpen
          {% else %}
          Lukket
          {% endif %}
        icon_template: >
          {% set battery_level = states.zwave.s28.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) |int * 10 %}
          {% if battery_round >= 30 %}
            {% if is_state("binary_sensor.bedroom_window_left", "on") %}
            mdi:window-open
            {% else %}
            mdi:window-closed
            {% endif %}
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
      bedroom_window_right:
        friendly_name: 'Høyre vindu'
        value_template: >
          {% if is_state("binary_sensor.bedroom_window_right", "on") %}
          Åpen
          {% else %}
          Lukket
          {% endif %}
        icon_template: >
          {% set battery_level = states.zwave.s29.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) |int * 10 %}
          {% if battery_round >= 30 %}
            {% if is_state("binary_sensor.bedroom_window_right", "on") %}
            mdi:window-open
            {% else %}
            mdi:window-closed
            {% endif %}
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
      bedroomolav_window_left:
        friendly_name: 'Venstre vindu'
        value_template: >
          {% if is_state("binary_sensor.bedroomolav_window_left", "on") %}
          Åpen
          {% else %}
          Lukket
          {% endif %}
        icon_template: >
          {% set battery_level = states.zwave.s30.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) |int * 10 %}
          {% if battery_round >= 30 %}
            {% if is_state("binary_sensor.bedroomolav_window_left", "on") %}
            mdi:window-open
            {% else %}
            mdi:window-closed
            {% endif %}
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
      bedroomolav_window_right:
        friendly_name: 'Høyre vindu'
        value_template: >
          {% if is_state("binary_sensor.bedroomolav_window_right", "on") %}
          Åpen
          {% else %}
          Lukket
          {% endif %}
        icon_template: >
          {% set battery_level = states.zwave.s31.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) |int * 10 %}
          {% if battery_round >= 30 %}
            {% if is_state("binary_sensor.bedroomolav_window_right", "on") %}
            mdi:window-open
            {% else %}
            mdi:window-closed
            {% endif %}
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
      smarthousemode:
        friendly_name: 'Modus'
        value_template: >
          {% if is_state("input_boolean.tod_morning", "on") %}
          Morgen
          {% elif is_state("input_boolean.tod_day", "on") %}
          Dag
          {% elif is_state("input_boolean.tod_ad", "on") %}
          Kveld
          {% elif is_state("input_boolean.tod_night", "on") %}
          Natt
          {% else %}
          Feil
          {% endif %}
        icon_template: >
          {% if is_state("input_boolean.tod_morning", "on") %}
          mdi:weather-sunset-up
          {% elif is_state("input_boolean.tod_day", "on") %}
          mdi:weather-sunny
          {% elif is_state("input_boolean.tod_ad", "on") %}
          mdi:weather-sunset-down
          {% elif is_state("input_boolean.tod_night", "on") %}
          mdi: weather-night
          {% else %}
          mdi:weather-night
          {% endif %}
      s01_battery:
        value_template: '{{ states.zwave.s01.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s02_battery:
        value_template: '{{ states.zwave.s02.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s03_battery:
        value_template: '{{ states.zwave.s03.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s04_battery:
        value_template: '{{ states.zwave.s04.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s05_battery:
        value_template: '{{ states.zwave.s05.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s06_battery:
        value_template: '{{ states.zwave.s06.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s07_battery:
        value_template: '{{ states.zwave.s07.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s08_battery:
        value_template: '{{ states.zwave.s08.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s09_battery:
        value_template: '{{ states.zwave.s09.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s10_battery:
        value_template: '{{ states.zwave.s10.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s11_battery:
        value_template: '{{ states.zwave.s11.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s12_battery:
        value_template: '{{ states.zwave.s12.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s13_battery:
        value_template: '{{ states.zwave.s13.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s14_battery:
        value_template: '{{ states.zwave.s14.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s15_battery:
        value_template: '{{ states.zwave.s15.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s22_battery:
        value_template: '{{ states.zwave.s22.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s23_battery:
        value_template: '{{ states.zwave.s23.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s24_battery:
        value_template: '{{ states.zwave.s24.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s25_battery:
        value_template: '{{ states.zwave.s25.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s26_battery:
        value_template: '{{ states.zwave.s26.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s28_battery:
        value_template: '{{ states.zwave.s28.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s29_battery:
        value_template: '{{ states.zwave.s29.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s30_battery:
        value_template: '{{ states.zwave.s30.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      s31_battery:
        value_template: '{{ states.zwave.s31.attributes.battery_level }}'
        unit_of_measurement: '%'
        device_class: battery
      nettleie:
        friendly_name: "Nettleie Trønderenergi Nett"
        unit_of_measurement: 'NOK/kWh'
        icon_template: "mdi-home-currency-usd"
        value_template: "{{0.429 | float}}"
      accumulatedconsumption:
        friendly_name: "Dagens strømforbruk"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.accumulatedConsumption | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'kWh'
      accumulatedcost:
        friendly_name: "Dagens strømkostnad"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.accumulatedCost | float |round(2)}}"
        icon_template: "mdi-home-currency-usd"
        unit_of_measurement: "NOK"
      minpower:
        friendly_name: "Minimum forbruk"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.minPower | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'W'
      averagepower:
        friendly_name: "Gjennomsnitt forbruk"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.averagePower | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'W'
      maxpower:
        friendly_name: "Maks forbruk"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.maxPower | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'W'
      voltagephase1:
        friendly_name: "Spenning fase 1"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.voltagePhase1 | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'W'
      voltagephase2:
        friendly_name: "Spenning fase 2"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.voltagePhase2 | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'W'
      voltagephase3:
        friendly_name: "Spenning fase 3"
        value_template: "{{states.sensor.real_time_consumption_rognervegen_4a.attributes.voltagePhase3 | float |round(2)}}"
        icon_template: "mdi-power-plug"
        unit_of_measurement: 'W'
#  - platform: ring

  - platform: moon

  - platform: netatmo
    modules:
      Kitchen:
        - temperature
        - co2
        - humidity
        - noise
        - pressure
        - wifi_status
      Outdoor:
        - temperature
        - humidity
        - max_temp
        - min_temp
        - rf_status
        - battery_vp

  - platform: netatmo_public
    areas:
      - lat_ne: 63.415
        lon_ne: 10.375
        lat_sw: 63.409
        lon_sw: 10.359
        monitored_conditions:
          - temperature
          - pressure
          - humidity
          - rain
#          - windstrength
#          - guststrength

  - platform: google_travel_time
    name: H_morning_comute
    api_key: !secret google_api_key
    origin: zone.home
    destination: place_id:ChIJVZdRQJoxbUYRTcToJ4smjeM
    scan_interval: 3600
    options:
      avoid: tolls
      mode: driving

  - platform: google_travel_time
    name: H_evening_comute
    api_key: !secret google_api_key
    origin: place_id:ChIJVZdRQJoxbUYRTcToJ4smjeM
    destination: zone.home
    scan_interval: 3600
    options:
      avoid: tolls
      mode: driving

  - platform: entur_public_transport
    stop_ids:
      - 'NSR:StopPlace:43061'
      - 'NSR:StopPlace:42500'

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'time_date'
      - 'time_utc'
      - 'beat'